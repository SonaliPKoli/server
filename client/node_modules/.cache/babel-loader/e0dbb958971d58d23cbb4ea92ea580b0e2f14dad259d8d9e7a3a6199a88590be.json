{"ast":null,"code":"var _jsxFileName = \"C:\\\\sociopedia\\\\server\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport authReducer from \"./state\";\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\n//for storing the data used in cache\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistStore(store),\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","authReducer","configureStore","getDefaultMiddleware","Provider","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","jsxDEV","_jsxDEV","persistConfig","key","version","persistedReducer","store","reducer","middleware","serializableCheck","ignoreActions","root","createRoot","document","getElementById","render","StrictMode","children","loading","persistor","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/sociopedia/server/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport authReducer from \"./state\";\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nconst persistConfig={key:\"root\",storage,version:1};\nconst persistedReducer=persistReducer(persistConfig,authReducer);\n//for storing the data used in cache\nconst store=configureStore({\n  reducer:persistedReducer,\n  middleware:(getDefaultMiddleware)=>\n  getDefaultMiddleware({\n    serializableCheck:{\n      ignoreActions:[FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER],\n    }\n  })\n})\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <Provider store={store}>\n  <PersistGate loading={null} persistor={persistStore(store)}>\n    <App/>\n    </PersistGate>\n  </Provider>\n  </React.StrictMode>\n);\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,WAAW,MAAM,SAAS;AACjC,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SAASC,QAAQ,QAAQ,aAAa;AACtC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9D,MAAMC,aAAa,GAAC;EAACC,GAAG,EAAC,MAAM;EAACL,OAAO;EAACM,OAAO,EAAC;AAAC,CAAC;AAClD,MAAMC,gBAAgB,GAACd,cAAc,CAACW,aAAa,EAAChB,WAAW,CAAC;AAChE;AACA,MAAMoB,KAAK,GAACnB,cAAc,CAAC;EACzBoB,OAAO,EAACF,gBAAgB;EACxBG,UAAU,EAAEpB,oBAAoB,IAChCA,oBAAoB,CAAC;IACnBqB,iBAAiB,EAAC;MAChBC,aAAa,EAAC,CAAClB,KAAK,EAClBC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ;IACZ;EACF,CAAC;AACH,CAAC,CAAC;AACF,MAAMc,IAAI,GAAG3B,QAAQ,CAAC4B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTd,OAAA,CAAClB,KAAK,CAACiC,UAAU;EAAAC,QAAA,eACjBhB,OAAA,CAACZ,QAAQ;IAACiB,KAAK,EAAEA,KAAM;IAAAW,QAAA,eACvBhB,OAAA,CAACF,WAAW;MAACmB,OAAO,EAAE,IAAK;MAACC,SAAS,EAAE7B,YAAY,CAACgB,KAAK,CAAE;MAAAW,QAAA,eACzDhB,OAAA,CAAChB,GAAG;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACQ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AACL;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACQ,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
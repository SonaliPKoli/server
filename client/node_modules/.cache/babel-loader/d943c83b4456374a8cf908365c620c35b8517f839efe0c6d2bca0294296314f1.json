{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//tis is global data that is we can access it anywhere we want\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.error(\"user friends non-existent:(\");\n      }\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPosts = state.posts.map(post => {\n        if (post._id === action.payload.post_id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","error","setPosts","setPost","updatedPosts","map","post","_id","post_id","actions","reducer"],"sources":["C:/sociopedia/server/client/src/state/index.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n//tis is global data that is we can access it anywhere we want\r\nconst initialState ={\r\nmode:\"light\",\r\nuser:null,\r\ntoken:null,\r\n posts:[],\r\n};\r\nexport const authSlice =createSlice({\r\n    name:\"auth\",\r\n    initialState,\r\n    reducers:{\r\n        setMode:(state)=>{\r\n            state.mode =state.mode === \"light\" ?\"dark\" :\"light\";\r\n        },\r\n        setLogin:(state,action)=>{\r\n            state.user=action.payload.user;\r\n            state.token=action.payload.token;\r\n        },\r\n        setLogout:(state)=>{\r\n            state.user=null;\r\n            state.token=null;\r\n        },\r\n        setFriends:(state,action)=>{\r\n            if(state.user){\r\n     state.user.friends=action.payload.friends;\r\n            }else{\r\n             console.error(\"user friends non-existent:(\")   \r\n            }\r\n        },\r\n        setPosts:(state,action)=>{\r\n            state.posts=action.payload.posts;\r\n        },\r\n        setPost:(state,action)=>{\r\n            const updatedPosts=state.posts.map((post)=>{\r\n                if(post._id===action.payload.post_id)return action.payload.post;\r\n                return post;\r\n            });\r\n            state.posts=updatedPosts;\r\n        }\r\n    }\r\n})\r\nexport const {setMode,setLogin,setLogout,setFriends,setPosts,setPost} =authSlice.actions;\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C;AACA,MAAMC,YAAY,GAAE;EACpBC,IAAI,EAAC,OAAO;EACZC,IAAI,EAAC,IAAI;EACTC,KAAK,EAAC,IAAI;EACTC,KAAK,EAAC;AACP,CAAC;AACD,OAAO,MAAMC,SAAS,GAAEN,WAAW,CAAC;EAChCO,IAAI,EAAC,MAAM;EACXN,YAAY;EACZO,QAAQ,EAAC;IACLC,OAAO,EAAEC,KAAK,IAAG;MACbA,KAAK,CAACR,IAAI,GAAEQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAE,MAAM,GAAE,OAAO;IACvD,CAAC;IACDS,QAAQ,EAACA,CAACD,KAAK,EAACE,MAAM,KAAG;MACrBF,KAAK,CAACP,IAAI,GAACS,MAAM,CAACC,OAAO,CAACV,IAAI;MAC9BO,KAAK,CAACN,KAAK,GAACQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpC,CAAC;IACDU,SAAS,EAAEJ,KAAK,IAAG;MACfA,KAAK,CAACP,IAAI,GAAC,IAAI;MACfO,KAAK,CAACN,KAAK,GAAC,IAAI;IACpB,CAAC;IACDW,UAAU,EAACA,CAACL,KAAK,EAACE,MAAM,KAAG;MACvB,IAAGF,KAAK,CAACP,IAAI,EAAC;QACrBO,KAAK,CAACP,IAAI,CAACa,OAAO,GAACJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAClC,CAAC,MAAI;QACJC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;MAC7C;IACJ,CAAC;IACDC,QAAQ,EAACA,CAACT,KAAK,EAACE,MAAM,KAAG;MACrBF,KAAK,CAACL,KAAK,GAACO,MAAM,CAACC,OAAO,CAACR,KAAK;IACpC,CAAC;IACDe,OAAO,EAACA,CAACV,KAAK,EAACE,MAAM,KAAG;MACpB,MAAMS,YAAY,GAACX,KAAK,CAACL,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAG;QACvC,IAAGA,IAAI,CAACC,GAAG,KAAGZ,MAAM,CAACC,OAAO,CAACY,OAAO,EAAC,OAAOb,MAAM,CAACC,OAAO,CAACU,IAAI;QAC/D,OAAOA,IAAI;MACf,CAAC,CAAC;MACFb,KAAK,CAACL,KAAK,GAACgB,YAAY;IAC5B;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACZ,OAAO;EAACE,QAAQ;EAACG,SAAS;EAACC,UAAU;EAACI,QAAQ;EAACC;AAAO,CAAC,GAAEd,SAAS,CAACoB,OAAO;AACxF,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"../../state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"../../components/FlexBetween\";\nconst registerSchema = yup.object().shape({\n  firstName: yup.string().required(\"required\"),\n  latstName: yup.string().required(\"required\"),\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  location: yup.string().required(\"required\"),\n  occupation: yup.string().required(\"required\"),\n  picture: yup.string().required(\"required\")\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\")\n});\nconst initialValuesRegister = {\n  firstName: \"\",\n  latstName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  occupation: \"\",\n  picture: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\nconst Form = () => {\n  _s();\n  const [pageType, setPageType] = useState(\"login\");\n  const {\n    palette\n  } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n  const handleFormSubmit = async(values);\n};\n_s(Form, \"52UNVUib7n76XWK3iRFMC5kqSfc=\", false, function () {\n  return [useTheme, useDispatch, useNavigate, useMediaQuery];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","useTheme","EditOutlinedIcon","Formik","yup","useNavigate","useDispatch","setLogin","Dropzone","FlexBetween","registerSchema","object","shape","firstName","string","required","latstName","email","password","location","occupation","picture","loginSchema","initialValuesRegister","initialValuesLogin","Form","_s","pageType","setPageType","palette","dispatch","navigate","isNonMobile","isLogin","isRegister","handleFormSubmit","async","values","_c","$RefreshReg$"],"sources":["C:/sociopedia/server/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport{\r\n    Box,\r\n    Button,\r\n    TextField,\r\n    useMediaQuery,\r\n    Typography,\r\n    useTheme,\r\n}from \"@mui/material\";\r\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setLogin} from \"../../state\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport FlexBetween from \"../../components/FlexBetween\";\r\nconst registerSchema =yup.object().shape({\r\n    firstName:yup.string().required(\"required\"),\r\n    latstName:yup.string().required(\"required\"),\r\n    email:yup.string().email(\"invalid email\").required(\"required\"),\r\n    password:yup.string().required(\"required\"),\r\n    location:yup.string().required(\"required\"),\r\n    occupation:yup.string().required(\"required\"),\r\n    picture:yup.string().required(\"required\"),\r\n\r\n});\r\nconst loginSchema=yup.object().shape({\r\n    email:yup.string().email(\"invalid email\").required(\"required\"),\r\n    password:yup.string().required(\"required\")\r\n});\r\nconst initialValuesRegister={\r\n    firstName:\"\",\r\n    latstName:\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    location:\"\",\r\n    occupation:\"\",\r\n    picture:\"\",\r\n\r\n};\r\nconst initialValuesLogin={\r\nemail:\"\",\r\npassword:\"\",\r\n};\r\nconst Form=()=>{\r\nconst [pageType,setPageType]=useState(\"login\");\r\nconst {palette}=useTheme();\r\nconst dispatch=useDispatch();\r\nconst navigate=useNavigate();\r\nconst isNonMobile =useMediaQuery(\"(min-width:600px)\");\r\nconst isLogin=pageType===\"login\";\r\nconst isRegister=pageType===\"register\";\r\n\r\nconst handleFormSubmit =async (values,)\r\n}\r\nexport default Form;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACIC,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,QAAQ,QACN,eAAe;AACrB,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,QAAQ,QAAO,aAAa;AACpC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,MAAMC,cAAc,GAAEN,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;EACrCC,SAAS,EAACT,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CC,SAAS,EAACZ,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CE,KAAK,EAACb,GAAG,CAACU,MAAM,EAAE,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EAC9DG,QAAQ,EAACd,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC1CI,QAAQ,EAACf,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC1CK,UAAU,EAAChB,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC5CM,OAAO,EAACjB,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;AAE5C,CAAC,CAAC;AACF,MAAMO,WAAW,GAAClB,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;EACjCK,KAAK,EAACb,GAAG,CAACU,MAAM,EAAE,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EAC9DG,QAAQ,EAACd,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;AAC7C,CAAC,CAAC;AACF,MAAMQ,qBAAqB,GAAC;EACxBV,SAAS,EAAC,EAAE;EACZG,SAAS,EAAC,EAAE;EACZC,KAAK,EAAC,EAAE;EACRC,QAAQ,EAAC,EAAE;EACXC,QAAQ,EAAC,EAAE;EACXC,UAAU,EAAC,EAAE;EACbC,OAAO,EAAC;AAEZ,CAAC;AACD,MAAMG,kBAAkB,GAAC;EACzBP,KAAK,EAAC,EAAE;EACRC,QAAQ,EAAC;AACT,CAAC;AACD,MAAMO,IAAI,GAACA,CAAA,KAAI;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACjC,QAAQ,CAAC,OAAO,CAAC;EAC9C,MAAM;IAACkC;EAAO,CAAC,GAAC5B,QAAQ,EAAE;EAC1B,MAAM6B,QAAQ,GAACxB,WAAW,EAAE;EAC5B,MAAMyB,QAAQ,GAAC1B,WAAW,EAAE;EAC5B,MAAM2B,WAAW,GAAEjC,aAAa,CAAC,mBAAmB,CAAC;EACrD,MAAMkC,OAAO,GAACN,QAAQ,KAAG,OAAO;EAChC,MAAMO,UAAU,GAACP,QAAQ,KAAG,UAAU;EAEtC,MAAMQ,gBAAgB,GAAEC,KAAK,CAAEC,MAAM,CAAE;AACvC,CAAC;AAAAX,EAAA,CAVKD,IAAI;EAAA,QAEMxB,QAAQ,EACTK,WAAW,EACXD,WAAW,EACPN,aAAa;AAAA;AAAAuC,EAAA,GAL1Bb,IAAI;AAWV,eAAeA,IAAI;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}